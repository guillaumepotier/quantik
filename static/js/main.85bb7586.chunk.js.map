{"version":3,"sources":["Piece.js","Cell.js","Zone.js","Player.js","tools.js","ia.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Piece","type","color","allowed","onPieceClick","className","onClick","Cell","x","y","board","onCellClick","piece","Zone","children","name","Player","this","pieces","isPieceAllowed","i","j","zone","getZone","hasWon","needed","row","push","intersection","length","col","z","cloneBoard","slice","clonePlayer","player","newPlayer","doMove","index","splice","removePlayerPiece","minmax","depth","players","playerIA","isIA","evaluate","finished","uniq","getDefaultState","turn","choose","needRestart","Game","args","state","withIA","setState","currentPlayer","alert","IAPlay","newState","bestScore","bestPiece","bestCoordinates","Object","assign","p","val","console","log","Math","random","play","value","checked","map","key","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85bb7586.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Piece.css';\n\nfunction Piece({ type, color, allowed, onPieceClick }) {\n  return (\n    <div className={`Piece Piece--${!allowed ? 'notAllowed' : 'allowed'} Piece--${color} Piece--${type}`} onClick={onPieceClick}>\n    </div>\n  );\n}\n\nexport default Piece;\n","import React from 'react';\n\nimport Piece from './Piece'\n\nimport './Cell.css';\n\nfunction Cell({x, y, board, onCellClick }) {\n  return (\n    <div className={`Cell CellX--${x} CellY--${y}`} onClick={onCellClick}>\n      {board && board[x][y] &&\n        <Piece type={board[x][y].piece} color={board[x][y].color} />\n      }\n    </div>\n  );\n}\n\nexport default Cell;\n","import React from 'react';\n\nfunction Zone({ children, name }) {\n  return (\n    <div className={`Zone Zone--${name}`}>\n      {children}\n    </div>\n  );\n}\n\nexport default Zone;\n","class Player {\n  constructor (color) {\n    this.color = color;\n    this.pieces = [\n      'square', 'square',\n      'triangle', 'triangle',\n      'circle', 'circle',\n      'cross', 'cross'\n    ];\n  }\n}\n\nexport default Player;\n","import intersection from 'lodash/intersection';\n\nimport Player from './Player'\n\nexport const isPieceAllowed = (board, x, y, piece, color) => {\n  let i, j;\n\n  // check row\n  for (i = 0; i <= 3; i++)\n    if (board[i][y] && board[i][y].piece === piece && board[i][y].color !== color)\n      return false;\n\n  // check coll\n  for (j = 0; j <= 3; j++)\n    if (board[x][j] && board[x][j].piece === piece && board[x][j].color !== color)\n      return false;\n\n  // check zone\n  const zone = getZone(x, y);\n\n  for (i = 0; i <= 3; i++)\n    for (j = 0; j <= 3; j++)\n      if (board[i][j] && getZone(i, j) === zone && board[i][j].piece === piece && board[i][j].color !== color)\n        return false;\n\n  return true;\n}\n\nexport const getZone = (x, y) => {\n  if (x <= 1) {\n    if (y <= 1)\n      return 1;\n    else\n      return 3;\n  } else {\n    if (y <= 1)\n      return 2;\n    else\n      return 4;\n  }\n}\n\nexport const hasWon = board => {\n  let i, j;\n  const needed = ['square', 'triangle', 'circle', 'cross'];\n\n  // test rows\n  for (j = 0; j <= 3; j++) {\n    let row = [];\n\n    for (i = 0; i <= 3; i++)\n      row.push(board[i][j].piece);\n\n    if (intersection(row, needed).length === 4)\n      return true;\n  }\n\n  // test cols\n  for (i = 0; i <= 3; i++) {\n    let col = [];\n\n    for (j = 0; j <= 3; j++)\n      col.push(board[i][j].piece);\n\n    if (intersection(col, needed).length === 4)\n      return true;\n  }\n\n  // test zones\n  for (let z = 1; z <= 4; z++) {\n    let zone = [];\n\n    for (i = 0; i <= 3; i++)\n      for (j = 0; j <= 3; j++)\n        if (getZone(i, j) === z)\n          zone.push(board[i][j].piece);\n\n    if (intersection(zone, needed).length === 4)\n      return true;\n  }\n\n  return false;\n}\n\nexport const cloneBoard = board => {\n  return [\n    board[0].slice(),\n    board[1].slice(),\n    board[2].slice(),\n    board[3].slice()\n  ]\n}\n\nexport const clonePlayer = player => {\n  const newPlayer = new Player(player.color);\n  newPlayer.pieces = player.pieces.slice();\n\n  return newPlayer;\n}\n\nexport const removePlayerPiece = (player, piece) => {\n  let index;\n\n  for (let i = 0; i < player.pieces.length; i++) {\n    if (player.pieces[i] === piece) {\n      index = i;\n      break;\n    }\n  }\n\n  player.pieces.splice(index, 1);\n}\n\nexport const doMove = (board, player, piece, x, y) => {\n  board[x][y] = { piece, color: player.color };\n  removePlayerPiece(player, piece);\n};\n","import uniq from 'lodash/uniq';\nimport lastIndexOf from 'lodash/lastIndexOf';\n\nimport {\n  cloneBoard,\n  clonePlayer,\n  hasWon,\n  doMove,\n  isPieceAllowed\n} from './tools'\n\nexport const WEIGHT = 1000;\nexport const MALUS = 69;\n\nexport const play = (state, depth) => {\n  let bestScore = 0;\n  let bestPiece = false;\n  let bestCoordinates = false;\n\n  let players = Object.assign({}, state.players);\n  let currentPlayer = clonePlayer(players[1]);  // IA is black for now on\n  let pieces = uniq(currentPlayer.pieces);\n\n  for (var i = 0; i <= 3; i++) {\n    for (var j = 0; j <= 3; j++) {\n      let board = cloneBoard(state.board);\n\n      // if already a piece on this case, not playable\n      if (board[i][j])\n        continue;\n\n      // loop for each remaining pieces and try to evaluate the play\n      for (var p = 0; p < pieces.length; p++) {\n        const piece = pieces[p];\n        currentPlayer = clonePlayer(players[1]);\n\n        if (!isPieceAllowed(board, i, j, piece, currentPlayer.color))\n          continue;\n\n        doMove(board, currentPlayer, piece, i, j);\n        const val = minmax(board, depth, players, currentPlayer, true);\n\n        console.log(`${pieces[p]}:${i},${j}`, val);\n\n        if (val > bestScore || (val === bestScore && Math.random() < 0.1)) {\n          bestScore = val;\n          bestPiece = piece;\n          bestCoordinates = { x: i, y: j };\n        }\n      }\n    }\n  }\n\n  console.log('bestScore', bestScore)\n\n  doMove(state.board, state.players[1], bestPiece, bestCoordinates.x, bestCoordinates.y);\n\n  return state;\n}\n\nexport const minmax = (board, depth, players, playerIA, isIA) => {\n  if (depth === 0 || hasWon(board))\n    return evaluate(board, players, playerIA, isIA);\n}\n\nexport const evaluate = (board, players, playerIA, isIA) => {\n  const finished = hasWon(board);\n  const player = isIA ? playerIA : players[0];\n\n  if (!finished) {\n    const malus = player.pieces.length >= 5 && uniq(player.pieces).length < 4;\n    return malus ? (isIA ? -MALUS : MALUS) : 100;\n  }\n\n  if (isIA) {\n    return WEIGHT - playerIA.pieces.length;\n  }\n\n  return -WEIGHT + players[0].pieces.length; // only black IA for now on\n}\n","import React from 'react';\n\nimport Cell from './Cell';\nimport Zone from './Zone';\nimport Piece from './Piece';\n\nimport Player from './Player';\n\nimport {\n  hasWon,\n  doMove,\n  isPieceAllowed\n} from './tools';\n\nimport {\n  play\n} from './ia'\n\nimport './Game.css';\n\nconst IA_DEPTH = 0;\n\nexport const getDefaultState = () => ({\n  board: [\n    [false,false,false,false],\n    [false,false,false,false],\n    [false,false,false,false],\n    [false,false,false,false]\n  ],\n  players: [\n    new Player('white'),\n    new Player('black')\n  ],\n  turn: 0,\n  choose: false,\n  needRestart: false\n});\n\nclass Game extends React.Component {\n  constructor (args) {\n    super(args);\n\n    this.state = {\n      ...getDefaultState(),\n      withIA: true\n    }\n  }\n\n  onCellClick (x, y) {\n    if (this.state.board[x][y] || this.state.needRestart)\n      return;\n\n    this.setState({ choose: {x, y} });\n  }\n\n  onPieceClick (piece, i) {\n    let { choose, turn, players, board } = this.state;\n    const { x, y } = choose;\n    let currentPlayer = players[turn%2];\n\n    doMove(board, currentPlayer, piece, x, y);\n\n    if (hasWon(board)) {\n      alert(`Congrats player ${currentPlayer.color}!`);\n      // this.setState(getDefaultState());\n      this.setState({ needRestart: true, choose: false });\n      return;\n    }\n\n    this.setState({\n      board,\n      turn: turn + 1,\n      choose: false\n    }, () => {\n      if (this.state.withIA) {\n        this.IAPlay();\n      }\n    });\n  }\n\n  IAPlay () {\n    const newState = play(this.state, IA_DEPTH);\n\n    this.setState({\n      ...newState,\n      turn: this.state.turn + 1\n    }, () => {\n      if (hasWon(this.state.board)) {\n        alert(`Congrats IA!`);\n        this.setState({ needRestart: true, choose: false });\n      }\n    });\n  }\n\n  render () {\n    const { board, players, turn, choose } = this.state;\n    const { x, y } = choose;\n    const currentPlayer = players[turn%2];\n\n    return (\n      <div className=\"Game\">\n\n        <div className=\"Board\">\n\n          <Zone name=\"3\">\n            <Cell x={0} y={3} board={board} onCellClick={() => this.onCellClick(0, 3)} />\n            <Cell x={1} y={3} board={board} onCellClick={() => this.onCellClick(1, 3)} />\n            <Cell x={0} y={2} board={board} onCellClick={() => this.onCellClick(0, 2)} />\n            <Cell x={1} y={2} board={board} onCellClick={() => this.onCellClick(1, 2)} />\n          </Zone>\n\n          <Zone name=\"4\">\n            <Cell x={2} y={3} board={board} onCellClick={() => this.onCellClick(2, 3)} />\n            <Cell x={3} y={3} board={board} onCellClick={() => this.onCellClick(3, 3)} />\n            <Cell x={2} y={2} board={board} onCellClick={() => this.onCellClick(2, 2)} />\n            <Cell x={3} y={2} board={board} onCellClick={() => this.onCellClick(3, 2)} />\n          </Zone>\n\n          <Zone name=\"1\">\n            <Cell x={0} y={1} board={board} onCellClick={() => this.onCellClick(0, 1)} />\n            <Cell x={1} y={1} board={board} onCellClick={() => this.onCellClick(1, 1)} />\n            <Cell x={0} y={0} board={board} onCellClick={() => this.onCellClick(0, 0)} />\n            <Cell x={1} y={0} board={board} onCellClick={() => this.onCellClick(1, 0)} />\n          </Zone>\n\n          <Zone name=\"2\">\n            <Cell x={2} y={1} board={board} onCellClick={() => this.onCellClick(2, 1)} />\n            <Cell x={3} y={1} board={board} onCellClick={() => this.onCellClick(3, 1)} />\n            <Cell x={2} y={0} board={board} onCellClick={() => this.onCellClick(2, 0)} />\n            <Cell x={3} y={0} board={board} onCellClick={() => this.onCellClick(3, 0)} />\n          </Zone>\n\n        </div>\n\n        <div className=\"Controls\">\n          Player vs. Player<input type=\"radio\" name=\"player2\" value=\"IA\" checked={!this.state.withIA} onClick={() => this.setState({ withIA: false })} />\n          Player vs. IA<input type=\"radio\" name=\"player2\" value=\"human\" checked={this.state.withIA} onClick={() => this.setState({ withIA: true })} />\n          {!this.state.needRestart &&\n            <div>Player {currentPlayer.color} turn</div>\n          }\n\n          {this.state.needRestart &&\n            <button onClick={() => {\n              this.setState(getDefaultState());\n            }}>New game!</button>\n          }\n\n          <div>--</div>\n\n          <div className=\"Choice\">\n            {choose &&\n              <div>\n                <div>Choose</div>\n                <div onClick={() => this.setState({ choose: false })}>X</div>\n                <div>\n                  {currentPlayer.pieces.map((piece, i) => {\n                    if (!isPieceAllowed(board, x, y, piece, currentPlayer.color))\n                      return false;\n                    return <Piece key={i} color={currentPlayer.color} type={piece} allowed={true} onPieceClick={() => this.onPieceClick(piece, i) } />\n                  })}\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\n\nimport Game from './Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}