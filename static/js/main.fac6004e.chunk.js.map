{"version":3,"sources":["Piece.js","Player.js","tools.js","Cell.js","ia.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Piece","type","color","allowed","onPieceClick","className","onClick","Player","this","pieces","lastPlay","isPieceAllowed","board","x","y","piece","i","j","zone","getZone","hasWon","which","rows","cols","zones","needed","push","k","length","intersection","what","where","getEmptyRowsAndColls","emptyRows","0","1","2","3","emptyColls","clonePlayer","player","newPlayer","slice","doMove","splice","findIndex","p","removePlayerPiece","undoMove","humanizeInt","int","Math","floor","M","humanizeMs","ms","S","s","logGameResult","iaDifficulty","iaFirst","history","JSON","parse","window","localStorage","getItem","w","d","t","Date","getTime","f","setItem","stringify","players","Cell","onCellClick","chosen","won","isChosen","isWinningCell","evaluatedMoves","IA","isIA","turn2","situations","currentPlayer","uniq","state","depth","debug","best","bestSituation","getAvailableSituations","debugBoard","max","situation","val","minmax","random","console","log","currentSituation","value","finished","evaluate","min","IA_DEPTH_MEDIUM","ia","getDefaultState","turn","iaComputing","iaLog","needRestart","showRules","showStats","Game","args","withIA","iaLevel","setState","alert","setTimeout","IAPlay","start","newState","play","end","cells","key","src","width","height","border","alt","style","margin","target","href","easy","medium","hard","allowedPieces","filter","gameLogs","round","name","checked","onChange","htmlFor","id","event","parseInt","renderGrid","renderPlayerPieces","role","aria-label","map","showAffiliateIFrame","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fac6004e.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Piece.css';\n\nfunction Piece({ type, color, allowed, onPieceClick }) {\n  return (\n    <div className={`Piece Piece--${!allowed ? 'notAllowed' : 'allowed'} Piece--${color} Piece--${type}`} onClick={onPieceClick}>\n    </div>\n  );\n}\n\nexport default Piece;\n","class Player {\n  constructor (color) {\n    this.color = color;\n    this.pieces = [\n      'square', 'square',\n      'triangle', 'triangle',\n      'circle', 'circle',\n      'cross', 'cross'\n    ];\n    this.lastPlay = false;\n  }\n}\n\nexport default Player;\n","import intersection from 'lodash/intersection';\n\nimport Player from './Player'\n\nexport const isPieceAllowed = (board, x, y, piece, color) => {\n  let i, j;\n\n  // check zone\n  const zone = getZone(x, y);\n\n  for (i = 0; i <= 3; i++) {\n    for (j = 0; j <= 3; j++) {\n      if (board[x][j] && board[x][j].piece === piece && board[x][j].color !== color)\n        return false;\n      if (board[i][y] && board[i][y].piece === piece && board[i][y].color !== color)\n        return false;\n      if (board[i][j] && getZone(i, j) === zone && board[i][j].piece === piece && board[i][j].color !== color)\n        return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isPieceAllowedOld = (board, x, y, piece, color) => {\n  let i, j;\n\n  // check row\n  for (i = 0; i <= 3; i++)\n    if (board[i][y] && board[i][y].piece === piece && board[i][y].color !== color)\n      return false;\n\n  // check coll\n  for (j = 0; j <= 3; j++)\n    if (board[x][j] && board[x][j].piece === piece && board[x][j].color !== color)\n      return false;\n\n  // check zone\n  const zone = getZone(x, y);\n\n  for (i = 0; i <= 3; i++)\n    for (j = 0; j <= 3; j++)\n      if (board[i][j] && getZone(i, j) === zone && board[i][j].piece === piece && board[i][j].color !== color)\n        return false;\n\n  return true;\n}\n\nexport const getZone = (x, y) => {\n  if (x <= 1) {\n    if (y <= 1)\n      return 0;\n    else\n      return 2;\n  } else {\n    if (y <= 1)\n      return 1;\n    else\n      return 3;\n  }\n}\n\nexport const hasWon = (board, which) => {\n  let i, j;\n  const rows = [[], [], [], []];\n  const cols = [[], [], [], []];\n  const zones = [[], [], [], []];\n  const needed = ['square', 'triangle', 'circle', 'cross'];\n\n  for (i = 0; i <= 3; i++) {\n    for (j = 0; j <= 3; j++) {\n      const piece = board[i][j].piece;\n\n      if (!board[i][j])\n        continue;\n\n      rows[i].push(piece);\n      cols[j].push(piece);\n      zones[getZone(i, j)].push(piece);\n    }\n  }\n\n  for (let k = 0; k <= 3; k++) {\n    if (rows[k].length !== 4 && cols[k].length !== 4 && zones[k].length !== 4)\n      continue;\n\n    if (intersection(rows[k], needed).length === 4) {\n      return which ? { what: 'row', where: k } : true;\n    }\n    if (intersection(cols[k], needed).length === 4) {\n      return which ? { what: 'col', where: k } : true;\n    }\n    if (intersection(zones[k], needed).length === 4) {\n      return which ? { what: 'zone', where: k } : true;\n    }\n  }\n\n  return false;\n}\n\nexport const getEmptyRowsAndColls = board => {\n  const emptyRows = { 0: true, 1: true, 2: true, 3: true };\n  const emptyColls = { 0: true, 1: true, 2: true, 3: true };\n\n  for (let i = 0; i <= 3; i++) {\n    for (let j = 0; j <= 3; j++) {\n      if (board[i][j]) {\n        emptyColls[j] = false;\n        emptyRows[i] = false;\n      }\n    }\n  }\n\n  return { rows: emptyRows, cols: emptyColls };\n}\n\nexport const hasWonOld = board => {\n  let i, j;\n  const needed = ['square', 'triangle', 'circle', 'cross'];\n\n  // test rows\n  for (j = 0; j <= 3; j++) {\n    let row = [];\n\n    for (i = 0; i <= 3; i++)\n      row.push(board[i][j].piece);\n\n    if (intersection(row, needed).length === 4)\n      return true;\n  }\n\n  // test cols\n  for (i = 0; i <= 3; i++) {\n    let col = [];\n\n    for (j = 0; j <= 3; j++)\n      col.push(board[i][j].piece);\n\n    if (intersection(col, needed).length === 4)\n      return true;\n  }\n\n  // test zones\n  for (let z = 1; z <= 4; z++) {\n    let zone = [];\n\n    for (i = 0; i <= 3; i++)\n      for (j = 0; j <= 3; j++)\n        if (getZone(i, j) === z)\n          zone.push(board[i][j].piece);\n\n    if (intersection(zone, needed).length === 4)\n      return true;\n  }\n\n  return false;\n}\n\nexport const cloneBoard = board => {\n  return [\n    board[0].slice(),\n    board[1].slice(),\n    board[2].slice(),\n    board[3].slice()\n  ];\n}\n\nexport const clonePlayer = player => {\n  const newPlayer = new Player(player.color);\n  newPlayer.pieces = player.pieces.slice();\n\n  return newPlayer;\n}\n\nexport const removePlayerPieceOld = (player, piece) => {\n  let index;\n\n  for (let i = 0; i < player.pieces.length; i++) {\n    if (player.pieces[i] === piece) {\n      index = i;\n      break;\n    }\n  }\n\n  player.pieces.splice(index, 1);\n}\n\nexport const removePlayerPiece = (player, piece) => {\n  player.pieces.splice(player.pieces.findIndex(p => p === piece), 1);\n}\n\nexport const doMove = (board, player, piece, x, y) => {\n  board[x][y] = { piece, color: player.color };\n  removePlayerPiece(player, piece);\n  player.lastPlay = { piece, x, y };\n}\n\nexport const undoMove = (board, player, piece, x, y) => {\n  board[x][y] = false;\n  player.pieces.push(piece);\n  player.lastPlay = false;\n}\n\nexport const humanizeInt = int => {\n  if (int <= 1000)\n    return int;\n  if (int <= 1000000)\n    return `${Math.floor(int/1000)}k+`;\n\n  const M = Math.floor(int/1000000);\n  const k = Math.floor((int-M*1000000)/100000);\n  return `${M},${k}M+`;\n}\n\nexport const humanizeMs = ms => {\n  if (ms <= 1000)\n    return `${ms}ms`;\n\n  const S = Math.floor(ms/1000);\n  const s = Math.floor((ms - S*1000)/100);\n  return `${S},${s}s`;\n}\n\nexport const logGameResult = (hasWon, iaDifficulty, iaFirst) => {\n  let history = JSON.parse(window.localStorage.getItem('quantik:results')) || [];\n  history.push({ w: hasWon, d: iaDifficulty, t: (new Date()).getTime(), f: !iaFirst });\n  window.localStorage.setItem('quantik:results', JSON.stringify(history));\n}\n\nexport const getGameResults = () => {\n  return JSON.parse(window.localStorage.getItem('quantik:results')) || [];\n}\n\nwindow.doMove = doMove;\nwindow.players = [\n  new Player('white'),\n  new Player('black')\n];\n","import React from 'react';\n\nimport Piece from './Piece'\n\nimport { getZone } from './tools'\n\nimport './Cell.css';\n\nfunction Cell({x, y, board, onCellClick, chosen, won }) {\n  const isChosen = x === chosen.x && y === chosen.y;\n  const zone = getZone(x, y);\n  let isWinningCell = false;\n\n  if (won) {\n    if (\n        (won.what === 'row' && won.where === x) ||\n        (won.what === 'col' && won.where === y) ||\n        (won.what === 'zone' && won.where === zone)\n      ) {\n      isWinningCell = true;\n    }\n  }\n\n  return (\n    <div className={`Cell CellX--${x} CellY--${y} CellZone--${zone} Cell--${isChosen ? 'chosen' : 'notChosen'} Cell--${isWinningCell ? 'winning' : 'notWinning'}`} onClick={onCellClick}>\n      {board && board[x][y] &&\n        <Piece type={board[x][y].piece} color={board[x][y].color} />\n      }\n    </div>\n  );\n}\n\nexport default Cell;\n","import uniq from 'lodash/uniq';\n\nimport {\n  clonePlayer,\n  hasWon,\n  doMove,\n  undoMove,\n  isPieceAllowed,\n  getEmptyRowsAndColls\n} from './tools'\n\nexport const WEIGHT = 1000;\nexport const MALUS = 69;\n\nexport const DEBUG = true;\nwindow.evaluatedMoves = 0;\n\n\nexport class IA {\n  getAvailableSituations (board, players, isIA, turn2) {\n    const situations = [];\n    const currentPlayer = players[isIA ? 1 : 0];\n    const pieces = uniq(currentPlayer.pieces);\n\n    for (let i = 0; i <= 3; i++) {\n      for (let j = 0; j <= 3; j++) {\n        // if already a piece on this case, not playable\n        if (board[i][j])\n          continue;\n\n        // on turn 2, consider only playing on empty rows and cols\n        if (turn2) {\n          const { rows, cols } = getEmptyRowsAndColls(board);\n\n          if (!rows[i] || !cols[j])\n            continue;\n        }\n\n        for (let p = 0; p < pieces.length; p++) {\n          const piece = pieces[p];\n\n          if (!isPieceAllowed(board, i, j, piece, currentPlayer.color))\n            continue;\n\n          situations.push({ x: i, y: j, piece });\n        }\n      }\n    }\n\n    return situations;\n  }\n\n  play (state, depth, debug) {\n    this.evaluatedMoves = 0;\n\n    let best = false;\n    let bestSituation = false;\n    let situations = this.getAvailableSituations(state.board, state.players, true);\n\n    const players = [\n      clonePlayer(state.players[0]),\n      clonePlayer(state.players[1])\n    ];\n\n    if (debug) {\n      var debugBoard = [\n        [{}, {}, {}, {}],\n        [{}, {}, {}, {}],\n        [{}, {}, {}, {}],\n        [{}, {}, {}, {}]\n      ];\n    }\n\n    // first move is not important, do not make many iterations\n    if (state.players[1].pieces.length === 8)\n      depth = 0;\n\n    // for second move, only consider playing on empty rows and cols\n    if (state.players[1].pieces.length === 7) {\n      depth = Math.max(0, depth - 1);\n      situations = this.getAvailableSituations(state.board, state.players, true, true);\n    }\n\n    for (let i = 0; i < situations.length; i++) {\n      const situation = situations[i];\n\n      doMove(state.board, players[1], situation.piece, situation.x, situation.y);\n      const val = this.minmax(state.board, depth, players, true);\n      undoMove(state.board, players[1], situation.piece, situation.x, situation.y);\n\n      if (debug)\n        debugBoard[situation.x][situation.y][situation.piece] = val;\n\n      if (best === false || val > best || (val === best && Math.random() < 0.1)) {\n        best = val;\n        bestSituation = situation;\n      }\n    }\n\n    // No more move possible for IA, it losts!\n    if (bestSituation === false)\n      return false;\n\n    doMove(state.board, state.players[1], bestSituation.piece, bestSituation.x, bestSituation.y);\n\n    if (debug) {\n      console.log('playv2 best situation', bestSituation.x, bestSituation.y, bestSituation.piece, best);\n      return debugBoard;\n    }\n\n    return state;\n  }\n\n  max (situations, depth, board, players) {\n    let best = false;\n    let bestSituation;\n\n    for (let i = 0; i < situations.length; i++) {\n      const currentSituation = situations[i];\n\n      doMove(board, players[1], currentSituation.piece, currentSituation.x, currentSituation.y);\n      const value = this.minmax(board, depth, players, true);\n      undoMove(board, players[1], currentSituation.piece, currentSituation.x, currentSituation.y);\n\n      if (best === false || value > best || (value === best && Math.random() < 0.1)) {\n        best = value;\n        bestSituation = currentSituation;\n      }\n\n      if (best >= WEIGHT - players[1].pieces.length)\n        break;\n    }\n\n    return { best, bestSituation };\n  }\n\n  min (situations, depth, board, players) {\n    let best = false;\n    let bestSituation;\n\n    for (let i = 0; i < situations.length; i++) {\n      const currentSituation = situations[i];\n\n      doMove(board, players[0], currentSituation.piece, currentSituation.x, currentSituation.y);\n      const value = this.minmax(board, depth, players, false);\n      undoMove(board, players[0], currentSituation.piece, currentSituation.x, currentSituation.y);\n\n      if (best === false || value < best || (value === best && Math.random() < 0.1)) {\n        best = value;\n        bestSituation = currentSituation;\n      }\n\n      if (best <= - WEIGHT - players[0].pieces.length)\n        break;\n    }\n\n    return { best, bestSituation };\n  }\n\n  minmax (board, depth, players, isIA) {\n    const finished = hasWon(board);\n\n    if (depth === 0 || finished)\n      return this.evaluate(board, players, isIA, finished);\n\n    // get next player situations\n    // ie: if we're currently evaluating an ia move, consider player next situations\n    const situations = this.getAvailableSituations(board, players, !isIA);\n\n    // const { best, bestSituation } = maxMinmaxv2(situations, depth - 1, players, !isIA);\n    // return best;\n\n    if (isIA) {\n      const { best } = this.min(situations, depth - 1, board, players);\n      // const { best, bestSituation } = this.min(situations, depth - 1, board, players);\n      // console.log('>>>> isIA best', best, bestSituation)\n      return best;\n    } else {\n      const { best } = this.max(situations, depth - 1, board, players);\n      // const { best, bestSituation } = this.max(situations, depth - 1, board, players);\n      // console.log('isPlayer best', best, bestSituation)\n      return best;\n    }\n  }\n\n  evaluate (board, players, isIA, finished) {\n    this.evaluatedMoves++;\n    finished = typeof finished === 'undefined' ? hasWon(board) : finished;\n\n    if (!finished) {\n      return 100;\n    }\n\n    return (isIA ? 1 : -1) * (WEIGHT - players[isIA ? 1 : 0].pieces.length);\n  }\n}\n","import React from 'react';\n\nimport uniq from 'lodash/uniq'\n\nimport Cell from './Cell';\nimport Piece from './Piece';\n\nimport Player from './Player';\n\nimport {\n  hasWon,\n  doMove,\n  undoMove,\n  isPieceAllowed,\n  humanizeInt,\n  humanizeMs,\n  logGameResult,\n  getGameResults\n} from './tools';\n\nimport {\n  IA\n} from './ia'\n\nimport './Game.css';\n\nconst IA_DEPTH_HARD = 6;\nconst IA_DEPTH_MEDIUM = 5;\nconst IA_DEPTH_EASY = 3;\n\nconst ia = new IA();\n\nexport const getDefaultState = () => ({\n  board: [\n    [false,false,false,false],\n    [false,false,false,false],\n    [false,false,false,false],\n    [false,false,false,false]\n  ],\n  players: [\n    new Player('white'),\n    new Player('black')\n  ],\n  turn: 0,\n  chosen: false,\n  iaComputing: false,\n  iaLog: false,\n  needRestart: false,\n  won: false,\n  showRules: false,\n  showStats: false,\n  iaFirst: false\n});\n\nclass Game extends React.Component {\n  constructor (args) {\n    super(args);\n\n    this.state = {\n      ...getDefaultState(),\n      withIA: true,\n      iaLevel: IA_DEPTH_MEDIUM\n    }\n  }\n\n  onCellClick (x, y) {\n    if (this.state.board[x][y] || this.state.needRestart)\n      return;\n\n    this.setState({ chosen: {x, y} });\n  }\n\n  onPieceClick (piece, i) {\n    let { chosen, turn, players, board, withIA, iaLevel } = this.state;\n    const { x, y } = chosen;\n    let currentPlayer = players[turn%2];\n\n    doMove(board, currentPlayer, piece, x, y);\n    const won = hasWon(board, true);\n\n    if (false !== won) {\n      alert(`Congrats player ${currentPlayer.color}!`);\n      this.setState({ needRestart: true, chosen: false, won });\n\n      if (withIA)\n        logGameResult(currentPlayer.color === 'white', iaLevel, this.state.iaFirst);\n\n      return;\n    }\n\n    this.setState({\n      board,\n      players,\n      turn: turn + 1,\n      chosen: false\n    }, () => {\n      if (withIA) {\n        this.setState({ iaComputing: true });\n        setTimeout(() => this.IAPlay(), 300);\n      }\n    });\n  }\n\n  iaFirst () {\n    this.IAPlay();\n    this.setState({ iaFirst: true, turn: 0 });\n  }\n\n  IAPlay () {\n    // todo: make a IA class with this private var\n    const { iaLevel } = this.state;\n\n    const start = new Date();\n    const newState = ia.play(this.state, this.state.iaLevel);\n    const end = new Date();\n\n    console.log(`IA took ${end-start}ms to play`);\n\n    if (false === newState) {\n      alert(`Congrats white! IA has no move left to play, you won!`);\n      this.setState({ needRestart: true, chosen: false });\n      logGameResult(true, iaLevel, this.state.iaFirst);\n      return;\n    }\n\n    this.setState({\n      ...newState,\n      iaLog: `IA evaluated ${humanizeInt(ia.evaluatedMoves)} possible moves in ${humanizeMs(end-start)}.`,\n      turn: this.state.turn + 1,\n      iaComputing: false\n    }, () => {\n      const won = hasWon(this.state.board, true);\n      if (false !== won) {\n        alert(`Congrats IA, you won! Guillaume is proud of you!`);\n        this.setState({ needRestart: true, chosen: false, won });\n        logGameResult(false, iaLevel, this.state.iaFirst);\n      }\n    });\n  }\n\n  undoMove () {\n    const { board, players, turn } = this.state;\n    undoMove(board, players[1], players[1].lastPlay.piece, players[1].lastPlay.x, players[1].lastPlay.y);\n    undoMove(board, players[0], players[0].lastPlay.piece, players[0].lastPlay.x, players[0].lastPlay.y);\n\n    this.setState({\n      board,\n      players,\n      turn: turn - 2\n    });\n  }\n\n  renderGrid (board) {\n    const cells = [];\n    const { chosen, won } = this.state;\n\n    for (let i = 0; i <= 3; i++)\n      for (let j = 0; j <= 3; j++)\n        cells.push(<Cell chosen={chosen} won={won} key={`${i}:${j}`} x={i} y={j} board={board} onCellClick={() => this.onCellClick(i, j)} />)\n\n    return cells;\n  }\n\n  renderPlayerPieces (player) {\n    const pieces = [];\n\n    for (let i = 0; i < player.pieces.length; i++)\n      pieces.push(<span key={i} className=\"PlayerPiece\"><Piece color={player.color} type={player.pieces[i]} /></span>);\n\n    return pieces;\n  }\n\n  showAffiliateIFrame () {\n    return <div className=\"Credentials\">\n      <div>QUANTIK is a GIGAMIC original board game.</div>\n      <img src=\"//ir-fr.amazon-adsystem.com/e/ir?t=guillaumepoti-21&l=am2&o=8&a=B07YN2YRM4\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style={{ border: 'none !important', margin: '0px !important' }} />\n      <div>This project is free and open source, I'm not affiliated in any way with GIGAMIC. If you like the game, please consider buying it by clicking <a target=\"_blank\" href=\"https://www.amazon.fr/gp/product/B07YN2YRM4/ref=as_li_tl?ie=UTF8&camp=1642&creative=6746&creativeASIN=B07YN2YRM4&linkCode=as2&tag=guillaumepoti-21&linkId=5e4c14952269b4674511f3d6b0282fcb\">on this Amazon affiliate link</a>.</div>\n    </div>\n  }\n\n  render () {\n    const { board, players, turn, chosen, showRules, showStats } = this.state;\n    const { x, y } = chosen;\n    const currentPlayer = players[turn%2];\n    let allowedPieces = chosen ? uniq(currentPlayer.pieces).filter(piece => isPieceAllowed(board, x, y, piece, currentPlayer.color)) : [];\n\n    let gameLogs = [];\n    let easy, medium, hard;\n\n    if (showStats) {\n      gameLogs = getGameResults();\n      console.log(gameLogs);\n\n      easy = gameLogs.filter(({ d }) => d === 3);\n      medium = gameLogs.filter(({ d }) => d === 5);\n      hard = gameLogs.filter(({ d }) => d === 6);\n    }\n\n    return (\n      <div className=\"Game\">\n\n        <div className=\"Header\">\n          <div className=\"Header-rules\" onClick={() => this.setState({ showRules: true })}><small>Rules</small></div>\n          <div className=\"Header-title\">Quantik</div>\n          <div className=\"Header-stats\" onClick={() => this.setState({ showStats: true })}><small>Stats</small></div>\n        </div>\n\n        {showRules &&\n          <div className=\"Modal Rules\">\n            <p>The object of the game is to be the first player to lay the fourth different shape of a row, column or square area.</p>\n\n            <p>In turn, the players take turns placing one of their pieces on the board. It is forbidden to place a shape in a row, column or area on which the same shape has already been placed by the opponent. You can only double a shape if you have played the previous one yourself.</p>\n\n            <p>The first player who places the fourth different shape in a row, column or area immediately wins the game, regardless of who owns the other pieces in that winning move.</p>\n\n            <p>If a player has no more possible moves, then he has lost.</p>\n\n            <p onClick={() => this.setState({ showRules: false })}>Close</p>\n          </div>\n        }\n\n        {showStats &&\n          <div className=\"Modal Stats\">\n            <div className=\"StatsCard\">\n              <div className=\"StatsCard-title\">Played games</div>\n              <div className=\"StatsCard-value\">{gameLogs.length}</div>\n            </div>\n\n            <div className=\"StatsCardGroup\">\n              <div className=\"StatsCard\">\n                <div className=\"StatsCard-title\">IA Easy plays</div>\n                <div className=\"StatsCard-value\">{easy.length}</div>\n              </div>\n              <div className=\"StatsCard\">\n                <div className=\"StatsCard-title\">Winrate</div>\n                <div className=\"StatsCard-value\">{easy.length !== 0 ? `${Math.round(easy.filter(({ w }) => w === true).length / easy.length * 100)}%` : '--'}</div>\n              </div>\n            </div>\n\n            <div className=\"StatsCardGroup\">\n              <div className=\"StatsCard\">\n                <div className=\"StatsCard-title\">IA Medium plays</div>\n                <div className=\"StatsCard-value\">{medium.length}</div>\n              </div>\n              <div className=\"StatsCard\">\n                <div className=\"StatsCard-title\">Winrate</div>\n                <div className=\"StatsCard-value\">{medium.length !== 0 ? `${Math.round(medium.filter(({ w }) => w === true).length / medium.length * 100)}%` : '--'}</div>\n              </div>\n            </div>\n\n            <div className=\"StatsCardGroup\">\n              <div className=\"StatsCard\">\n                <div className=\"StatsCard-title\">IA Hard plays</div>\n                <div className=\"StatsCard-value\">{hard.length}</div>\n              </div>\n              <div className=\"StatsCard\">\n                <div className=\"StatsCard-title\">Winrate</div>\n                <div className=\"StatsCard-value\">{hard.length !== 0 ? `${Math.round(hard.filter(({ w }) => w === true).length / hard.length * 100)}%` : '--'}</div>\n              </div>\n            </div>\n\n            <p onClick={() => this.setState({ showStats: false })}>Close</p>\n\n          </div>\n        }\n\n        <div className=\"GameContent\">\n          <div className=\"Parameters\">\n            <div className=\"HumanOrIa\">\n              <span>Player vs.</span>\n              <span>\n                Player<input type=\"radio\" name=\"player2\" value=\"IA\" checked={!this.state.withIA} onChange={() => this.setState({ withIA: false })} />\n                IA<input type=\"radio\" name=\"player2\" value=\"human\" checked={this.state.withIA} onChange={() => this.setState({ withIA: true })} />\n              </span>\n            </div>\n            {this.state.withIA &&\n              <div className=\"IALevel\">\n                <label htmlFor=\"ia_level\">IA Difficulty</label>\n                <select id=\"ia_level\" name=\"ia_level\" value={this.state.iaLevel} onChange={event => this.setState({ iaLevel: parseInt(event.target.value, 10) }) }>\n                  <option value={IA_DEPTH_EASY}>Easy</option>\n                  <option value={IA_DEPTH_MEDIUM}>Medium</option>\n                  <option value={IA_DEPTH_HARD}>Hard</option>\n                </select>\n\n                {this.state.turn === 0 &&\n                  <button\n                    onClick={() => this.iaFirst()}>IA plays first</button>\n                }\n\n              </div>\n            }\n\n            {!this.state.needRestart &&\n              <div>\n                <span className=\"PlayerTurn\">Player {currentPlayer.color} turn</span>\n                {players[0].lastPlay && players[1].lastPlay &&\n                  <button onClick={() => this.undoMove()}>Undo previous</button>\n                }\n              </div>\n            }\n\n            {this.state.needRestart &&\n              <button onClick={() => {\n                this.setState({\n                  ...this.state,\n                  ...getDefaultState()\n                });\n              }}>New game!</button>\n            }\n          </div>\n\n          <div className=\"Board\">\n\n          {this.renderGrid(board)}\n\n          </div>\n\n          <div className=\"PlayerPieces\">\n            <div className=\"PlayerPieces-white\">\n              <div className=\"PlayerPieces-whiteLabel\">white:</div>\n              <div className=\"PlayerPieces-draw\">{this.renderPlayerPieces(players[0])}</div>\n            </div>\n            <div className=\"PlayerPieces-black\">\n              <div className=\"PlayerPieces-blackLabel\">black:</div>\n              <div className=\"PlayerPieces-draw\">{this.renderPlayerPieces(players[1])}</div>\n            </div>\n          </div>\n\n          <div className=\"Controls\">\n            {this.state.iaComputing &&\n              <small>IA is computing..</small>\n            }\n            {this.state.iaLog && !this.state.iaComputing &&\n              <small>{this.state.iaLog}</small>\n            }\n\n            <div className=\"Choice\">\n              {chosen &&\n                <div className=\"ChoiceWrapper\">\n                  <div className=\"Choice-title\">Allowed pieces</div>\n                  <div className=\"Close\" onClick={() => this.setState({ chosen: false })}>X</div>\n                  <div className=\"Choice-pieces\">\n                    {!allowedPieces.length &&\n                      <span>None! <span role=\"img\" aria-label=\"sad\">😰</span></span>\n                    }\n                    {allowedPieces.map((piece, i) => {\n                      if (!isPieceAllowed(board, x, y, piece, currentPlayer.color))\n                        return false;\n                      return <Piece key={i} color={currentPlayer.color} type={piece} allowed={true} onPieceClick={() => this.onPieceClick(piece, i) } />\n                    })}\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n\n        </div>\n\n        <div>{this.showAffiliateIFrame()}</div>\n\n        <div className=\"Version\">\n          <a href=\"https://github.com/guillaumepotier/quantik\" target=\"_blank\">Github source</a> - v0.7.1\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\n\nimport Game from './Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}